<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄杰|博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hj0913.github.io/"/>
  <updated>2019-07-12T06:34:51.805Z</updated>
  <id>https://hj0913.github.io/</id>
  
  <author>
    <name>Huang Jie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微服务使用场景分析</title>
    <link href="https://hj0913.github.io/2019/07/12/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E5%88%86%E6%9E%90/"/>
    <id>https://hj0913.github.io/2019/07/12/微服务使用场景分析/</id>
    <published>2019-07-12T06:33:25.000Z</published>
    <updated>2019-07-12T06:34:51.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微服务是什么"><a href="#微服务是什么" class="headerlink" title="微服务是什么"></a>微服务是什么</h2><h2 id="微服务能带来什么好处"><a href="#微服务能带来什么好处" class="headerlink" title="微服务能带来什么好处"></a>微服务能带来什么好处</h2><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;微服务是什么&quot;&gt;&lt;a href=&quot;#微服务是什么&quot; class=&quot;headerlink&quot; title=&quot;微服务是什么&quot;&gt;&lt;/a&gt;微服务是什么&lt;/h2&gt;&lt;h2 id=&quot;微服务能带来什么好处&quot;&gt;&lt;a href=&quot;#微服务能带来什么好处&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="java" scheme="https://hj0913.github.io/tags/java/"/>
    
      <category term="微服务" scheme="https://hj0913.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>jenkins+gogs+harbor+docker自动化环境部署与安装</title>
    <link href="https://hj0913.github.io/2019/07/12/jenkins-gogs-harbor-docker%E8%87%AA%E5%8A%A8%E5%8C%96%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E8%A3%85/"/>
    <id>https://hj0913.github.io/2019/07/12/jenkins-gogs-harbor-docker自动化环境部署与安装/</id>
    <published>2019-07-12T02:46:29.000Z</published>
    <updated>2019-07-12T02:53:58.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一，docker环境安装"><a href="#一，docker环境安装" class="headerlink" title="一，docker环境安装"></a>一，docker环境安装</h2><p>docker 环境的安装在官网上由相关的安装文档，将其写成ansible的脚本的形式</p><h2 id="二，gogs安装"><a href="#二，gogs安装" class="headerlink" title="二，gogs安装"></a>二，gogs安装</h2><h2 id="三，harbor安装"><a href="#三，harbor安装" class="headerlink" title="三，harbor安装"></a>三，harbor安装</h2><h2 id="四，jenkins安装"><a href="#四，jenkins安装" class="headerlink" title="四，jenkins安装"></a>四，jenkins安装</h2><h2 id="五，打包部署应用"><a href="#五，打包部署应用" class="headerlink" title="五，打包部署应用"></a>五，打包部署应用</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一，docker环境安装&quot;&gt;&lt;a href=&quot;#一，docker环境安装&quot; class=&quot;headerlink&quot; title=&quot;一，docker环境安装&quot;&gt;&lt;/a&gt;一，docker环境安装&lt;/h2&gt;&lt;p&gt;docker 环境的安装在官网上由相关的安装文档，将其写成a
      
    
    </summary>
    
    
      <category term="jenkins" scheme="https://hj0913.github.io/tags/jenkins/"/>
    
      <category term="harbor" scheme="https://hj0913.github.io/tags/harbor/"/>
    
      <category term="docker" scheme="https://hj0913.github.io/tags/docker/"/>
    
      <category term="java" scheme="https://hj0913.github.io/tags/java/"/>
    
      <category term="gogs" scheme="https://hj0913.github.io/tags/gogs/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis源码分析</title>
    <link href="https://hj0913.github.io/2019/06/19/MyBatis%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://hj0913.github.io/2019/06/19/MyBatis源码分析/</id>
    <published>2019-06-19T13:38:48.000Z</published>
    <updated>2019-06-19T14:14:02.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyBatis源码分析"><a href="#MyBatis源码分析" class="headerlink" title="MyBatis源码分析"></a>MyBatis源码分析</h2><h3 id="MyBatis运行过程"><a href="#MyBatis运行过程" class="headerlink" title="MyBatis运行过程"></a>MyBatis运行过程</h3><ul><li><p>传统的JDBC编程查询数据库代码和过程总结</p><ol><li>加载驱动</li><li>创建连接，Connection对象</li><li>根据Connection创建Statement或者PreparedStatement来执行 sql 语句</li><li>返回结果集到 ResultSet 中</li><li>手动将ResultSet映射到JavaBean中<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//声明Connection对象</span></span><br><span class="line">    Connection con = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">//遍历查询结果集</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//加载驱动程序</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        <span class="comment">//创建 connection 对象</span></span><br><span class="line">        con = DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/db"</span>, <span class="string">"username"</span>, <span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//使用 connection 对象创建statement 或者 PreparedStatement 类对象，用来执行SQL语句</span></span><br><span class="line">        Statement statement = con.createStatement();</span><br><span class="line">        <span class="comment">//要执行的SQL语句</span></span><br><span class="line">        String sql = <span class="string">"select * from emp"</span>;</span><br><span class="line">        <span class="comment">//3.ResultSet类，用来存放获取的结果集！！</span></span><br><span class="line">        ResultSet rs = statement.executeQuery(sql);</span><br><span class="line">      String job = <span class="string">""</span>;</span><br><span class="line">        String id = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">            <span class="comment">//获取stuname这列数据</span></span><br><span class="line">            job = rs.getString(<span class="string">"job"</span>);</span><br><span class="line">            <span class="comment">//获取stuid这列数据</span></span><br><span class="line">            id = rs.getString(<span class="string">"ename"</span>);</span><br><span class="line">            <span class="comment">//输出结果</span></span><br><span class="line">            System.out.println(id + <span class="string">""</span> + job);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        <span class="comment">//数据库连接失败异常处理</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        rs.close();</span><br><span class="line">        con.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>MyBatis具体流程</p><ol><li>使用配置文件构建SqlSessionFactory</li><li>使用SqlSessionFactory获得SqlSession，SqlSession相当于传统JDBC的Connection</li><li>使用SqlSession得到Mapper</li><li>用Mapper来执行sql语句，并返回结果直接封装到JavaBean中<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//获取 sqlSession，sqlSession 相当于传统 JDBC 的 Conection</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line"> InputStream configFile = <span class="keyword">new</span> FileInputStream(filePath);</span><br><span class="line"> SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder.build(configFile);</span><br><span class="line"> <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用 sqlSession 获得对应的 mapper，mapper 用来执行 sql 语句。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title">get</span><span class="params">(SqlSession sqlSession, <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"> UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"> <span class="keyword">return</span> userMapper.selectByPrimaryKey(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>总结</p><ol><li>初始化阶段 –&gt; 读写XML配置文件和注解中的配置信息，创建配置信息，并完成各个模块的初始化工作</li><li>代理阶段  –&gt; 封装batis编程模型，使用mapper接口开发的初始化工作</li><li>数据读写阶段 –&gt; 通过sqlSession完成sql的解析，参数的映射，SQL的执行和结果反射的过程</li></ol></li></ul><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MyBatis源码分析&quot;&gt;&lt;a href=&quot;#MyBatis源码分析&quot; class=&quot;headerlink&quot; title=&quot;MyBatis源码分析&quot;&gt;&lt;/a&gt;MyBatis源码分析&lt;/h2&gt;&lt;h3 id=&quot;MyBatis运行过程&quot;&gt;&lt;a href=&quot;#MyBati
      
    
    </summary>
    
    
      <category term="Java" scheme="https://hj0913.github.io/tags/Java/"/>
    
      <category term="MyBatis" scheme="https://hj0913.github.io/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="https://hj0913.github.io/2019/06/12/Maven/"/>
    <id>https://hj0913.github.io/2019/06/12/Maven/</id>
    <published>2019-06-12T11:40:41.000Z</published>
    <updated>2019-06-12T11:40:41.555Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sonar+maven+jenkins架构搭建</title>
    <link href="https://hj0913.github.io/2019/06/12/sonar-maven-jenkins%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://hj0913.github.io/2019/06/12/sonar-maven-jenkins架构搭建/</id>
    <published>2019-06-12T09:35:31.000Z</published>
    <updated>2019-06-12T12:31:25.404Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sonar安装"><a href="#sonar安装" class="headerlink" title="sonar安装"></a>sonar安装</h3><ul><li><h3 id="配置Maven"><a href="#配置Maven" class="headerlink" title="配置Maven"></a>配置Maven</h3></li></ul><h3 id="配置Jenkins"><a href="#配置Jenkins" class="headerlink" title="配置Jenkins"></a>配置Jenkins</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;sonar安装&quot;&gt;&lt;a href=&quot;#sonar安装&quot; class=&quot;headerlink&quot; title=&quot;sonar安装&quot;&gt;&lt;/a&gt;sonar安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;配置Maven&quot;&gt;&lt;a href=&quot;#配置Maven&quot; class=&quot;h
      
    
    </summary>
    
    
      <category term="sonar" scheme="https://hj0913.github.io/tags/sonar/"/>
    
      <category term="Jenkins" scheme="https://hj0913.github.io/tags/Jenkins/"/>
    
      <category term="Maven" scheme="https://hj0913.github.io/tags/Maven/"/>
    
  </entry>
  
</feed>
